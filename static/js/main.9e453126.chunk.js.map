{"version":3,"sources":["components/Checkbox.js","components/Radio.js","app-config.js","components/Form.js","components/Result.js","App.js","index.js"],"names":["Checkbox","props","checkbox","type","name","defaultChecked","checked","info","Radio","radio","value","radios","init_checkboxes","string","Form","setPasswords","setInputLength","useState","find","r","length","setLength","checkboxes","setCheckboxes","generateString","map","join","id","onChange","form","document","querySelector","Number","classList","remove","add","onSubmit","e","preventDefault","passwords","Array","fill","password","generatePassword","clicked","className","o","i","Math","floor","random","Result","inputLength","ResultItem","a","target","parentElement","select","execCommand","p","style","width","readOnly","onClick","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9e453126.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nfunction Checkbox(props) {\r\n    const {checkbox} = props;\r\n    return (\r\n        <p>\r\n            <label>\r\n                <input type=\"checkbox\"\r\n                       name={checkbox.name}\r\n                       defaultChecked={checkbox.checked}/>\r\n                <span>{checkbox.info}</span>\r\n            </label>\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default Checkbox","import React from 'react'\r\n\r\nexport default function Radio(props) {\r\n    const {radio} = props;\r\n    return (\r\n        <p>\r\n            <label>\r\n                <input name=\"pass_length\" type=\"radio\"\r\n                       value={radio.value}\r\n                       defaultChecked={radio.checked} />\r\n                <span>{radio.info}</span>\r\n            </label>\r\n        </p>\r\n    )\r\n}","export const passwords_count = 8;\r\n\r\nexport const radios = [\r\n    {\r\n        value: 10,\r\n        info: '10 characters',\r\n        checked: false\r\n    },\r\n    {\r\n        value: 15,\r\n        info: '15 characters',\r\n        checked: false\r\n    },\r\n    {\r\n        value: 20,\r\n        info: '20 characters',\r\n        checked: true\r\n    },\r\n    {\r\n        value: 30,\r\n        info: '30 characters',\r\n        checked: false\r\n    },\r\n];\r\n\r\nexport const init_checkboxes = [\r\n    {\r\n        name: 'en',\r\n        info: 'English (abc)',\r\n        checked: true,\r\n        string: 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\r\n    },\r\n    {\r\n        name: 'num',\r\n        info: 'numbers (123)',\r\n        checked: true,\r\n        string: '0123456789'\r\n    },\r\n    {\r\n        name: 'symb',\r\n        info: 'symbols (!@#)',\r\n        checked: true,\r\n        string: '!@#$%^&*(){}[]_-+=?:~'\r\n    },\r\n    {\r\n        name: 'cyr',\r\n        info: 'Cyrillic (абв)',\r\n        checked: false,\r\n        string: 'АаБбВвГгДдЕеЁёЖжЗзИиЙйКкЛлМмНнОоПпРрСсТтУуФфХхЦцЧчШшЩщЬьЫыЪъЭэЮюЯя'\r\n    },\r\n];\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport Checkbox from \"./Checkbox\";\r\nimport Radio from \"./Radio\";\r\nimport {init_checkboxes, passwords_count, radios} from \"../app-config\";\r\n\r\n\r\nexport default function Form(props) {\r\n    const {setPasswords, setInputLength} = props;\r\n    const [length, setLength] = useState(radios.find(r => r.checked).value);\r\n    const [checkboxes, setCheckboxes] = useState(init_checkboxes);\r\n\r\n    function handleFormChange() {\r\n        const form = document.querySelector('#form');\r\n        setLength(Number(form['pass_length'].value));\r\n        setCheckboxes(\r\n            checkboxes.map(checkbox => {\r\n                checkbox.checked = form[checkbox.name].checked;\r\n                return checkbox\r\n            })\r\n        );\r\n        !generateString()\r\n            ? form.querySelector('button').classList.add('disabled')\r\n            : form.querySelector('button').classList.remove('disabled')\r\n    }\r\n\r\n    function generateString() {\r\n        return checkboxes.map(\r\n            checkbox => checkbox.checked ? checkbox.string : ''\r\n        ).join('');\r\n    }\r\n\r\n    function handleFormSubmit(e) {\r\n        e.preventDefault();\r\n        const string = generateString();\r\n        const passwords = Array(passwords_count).fill(null).map(\r\n            () => {\r\n                return {\r\n                    password: generatePassword(string, length),\r\n                    clicked: false\r\n                }\r\n            }\r\n        );\r\n        setPasswords(passwords)\r\n        setInputLength(length)\r\n    }\r\n\r\n    return (\r\n        <form id=\"form\"\r\n              onChange={handleFormChange}\r\n              onSubmit={handleFormSubmit}>\r\n            <div className=\"form-body\">\r\n                <div>\r\n                    {checkboxes.map(o => <Checkbox key={o.name} checkbox={o}/>)}\r\n                </div>\r\n                <div>\r\n                    {radios.map(o => <Radio key={o.value} radio={o}/>)}\r\n                </div>\r\n            </div>\r\n            <div className=\"form-footer\">\r\n                <button className=\"btn\">Generate!</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nfunction generatePassword(string, length) {\r\n    let password = '';\r\n    for (let i = 0; i < length; i++) {\r\n        const position = Math.floor(Math.random() * string.length);\r\n        password += string[position]\r\n    }\r\n    return password\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\n\r\nexport default function Result(props) {\r\n    const {passwords, setPasswords, inputLength} = props;\r\n    return (\r\n        <div id=\"result\">\r\n            {\r\n                passwords.map(password =>\r\n                    <ResultItem key={password.password}\r\n                                password={password}\r\n                                passwords={passwords}\r\n                                setPasswords={setPasswords}\r\n                                inputLength={inputLength}/>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ResultItem(props) {\r\n\r\n    const {password, passwords, setPasswords, inputLength} = props;\r\n\r\n    async function copyPassword(e) {\r\n        const inputEl = e.target.parentElement.querySelector('input')\r\n        inputEl.select()\r\n        document.execCommand('copy')\r\n        setPasswords(passwords.map(p => {\r\n            p.clicked = (p.password === password.password)\r\n            return p\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <p>\r\n            <input value={password.password}\r\n                   style={{width: `${inputLength}ch`}}\r\n                   className=\"result__item\"\r\n                   readOnly/>\r\n            <i className=\"material-icons\"\r\n               onClick={copyPassword}>\r\n                {password.clicked ? \"check\" : \"content_copy\"}\r\n            </i>\r\n        </p>\r\n    )\r\n}\r\n\r\n","import './style.css';\r\nimport Form from \"./components/Form\";\r\nimport Result from \"./components/Result\";\r\nimport React, {useState} from \"react\";\r\n\r\n\r\nfunction App() {\r\n\r\n    const [passwords, setPasswords] = useState([]);\r\n    const [inputLength, setInputLength] = useState();\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <h1>Password Generator</h1>\r\n            <section>\r\n                <Form setPasswords={setPasswords}\r\n                      setInputLength={setInputLength}/>\r\n                <Result passwords={passwords}\r\n                        setPasswords={setPasswords}\r\n                        inputLength={inputLength}/>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}