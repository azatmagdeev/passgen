{"version":3,"sources":["components/Checkbox.js","components/Radio.js","lib/app-config.js","lib/functions.js","components/Form.js","components/Result.js","components/App.js","index.js"],"names":["Checkbox","props","checkbox","type","name","defaultChecked","checked","disabled","info","Radio","radio","value","init_radios","init_checkboxes","string","generatePassword","length","password","i","Math","floor","random","generateString","checkboxes","map","join","generatePasswords","find","r","Array","fill","copied","Form","setPasswords","setInputLength","useState","radios","id","onChange","form","document","querySelector","forEach","filter","ch","removeAttribute","click","onSubmit","e","preventDefault","passwords","className","o","Result","inputLength","ResultItem","style","width","readOnly","title","onClick","target","parentElement","select","execCommand","p","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"qLAwBeA,MAff,SAAkBC,GAAQ,IAAD,EACdC,EAAYD,EAAZC,SACP,OACI,4BACI,kCACI,uBAAOC,KAAK,WACLC,KAAMF,EAASE,KACfC,eAAgBH,EAASI,QACzBC,SAAQ,UAAEL,EAASK,gBAAX,WACf,+BAAOL,EAASM,aChBjB,SAASC,EAAMR,GAAQ,IAC3BS,EAAST,EAATS,MACP,OACI,4BACI,kCACI,uBAAON,KAAK,cAAcD,KAAK,QACxBQ,MAAOD,EAAMC,MACbN,eAAgBK,EAAMJ,UAC7B,+BAAOI,EAAMF,YCVtB,IAEMI,EAAc,CACvB,CACID,MAAO,GACPH,KAAM,0CACNF,SAAS,GAEb,CACIK,MAAO,GACPH,KAAM,0CACNF,SAAS,GAEb,CACIK,MAAO,GACPH,KAAM,0CACNF,SAAS,GAEb,CACIK,MAAO,GACPH,KAAM,0CACNF,SAAS,IAIJO,EAAkB,CAC3B,CACIT,KAAM,KACNI,KAAM,yDACNF,SAAS,EACTQ,OAAQ,8BAEZ,CACIV,KAAM,KACNI,KAAM,+DACNF,SAAS,EACTQ,OAAQ,8BAEZ,CACIV,KAAM,MACNI,KAAM,uCACNF,SAAS,EACTQ,OAAQ,kCAEZ,CACIV,KAAM,OACNI,KAAM,mDACNF,SAAS,EACTQ,OAAQ,0BCxCT,SAASC,EAAiBD,EAAQE,GAErC,IADA,IAAIC,EAAW,GACNC,EAAI,EAAGA,EAAIF,EAAQE,IAAK,CAE7BD,GAAYH,EADKK,KAAKC,MAAMD,KAAKE,SAAWP,EAAOE,SAGvD,OAAOC,EAQJ,SAASK,IAA8C,IAA/BC,EAA8B,uDAAjBV,EACxC,OAAOU,EAAWC,KACd,SAAAtB,GAAQ,OAAIA,EAASI,QAAUJ,EAASY,OAAS,MACnDW,KAAK,IASJ,SAASC,IAGb,IAFCZ,EAEF,uDAFWQ,IACTN,EACF,uDADWJ,EAAYe,MAAK,SAAAC,GAAC,OAAkB,IAAdA,EAAEtB,WAAkBK,MAEnD,OAAOkB,MDtCoB,GCsCGC,KAAK,MAAMN,KACrC,WACI,MAAO,CACHP,SAAUF,EAAiBD,EAAQE,GACnCe,QAAQ,MC9BT,SAASC,EAAK/B,GAAQ,IAC1BgC,EAAgChC,EAAhCgC,aAAcC,EAAkBjC,EAAlBiC,eADW,EAEfC,mBAASvB,GAAnBwB,EAFyB,sBAGXD,mBAAStB,GAAvBU,EAHyB,oBAyChC,OACI,uBAAMc,GAAG,OACHC,SAnCV,WACI,IAAMC,EAAOC,SAASC,cAAc,SAKpC,GAJAlB,EAAWmB,SAAQ,SAAAxC,GACfA,EAASI,QAAUiC,EAAKrC,EAASE,MAAME,WAG7B,IADAiB,EAAWoB,QAAO,SAAAzC,GAAQ,OAAyB,IAArBA,EAASI,WAAkBU,OACtD,CACb,IAAMd,EAAWqB,EAAWI,MAAK,SAAAiB,GAAE,OAAmB,IAAfA,EAAGtC,WAC1CiC,EAAKrC,EAASE,MAAMG,UAAW,MAC5B,CAAC,IAAD,EACH,UAAAgC,EAAKE,cAAc,qBAAnB,SAAkCI,gBAAgB,YAGtDT,EAAOM,SAAQ,SAAAhC,GACXA,EAAMJ,QAAUiC,EAAKE,cAAL,kBAA8B/B,EAAMC,MAApC,OAA+CL,WAGnEiC,EAAKE,cAAc,UAAUK,SAmBvBC,SAZV,SAA0BC,GACtBA,EAAEC,iBACF,IAAMnC,EAASQ,EAAeC,GACxBP,EAASoB,EAAOT,MAAK,SAAAjB,GAAK,OAAIA,EAAMJ,WAASK,MAC7CuC,EAAYxB,EAAkBZ,EAAQE,GAC5CiB,EAAaiB,GACbhB,EAAelB,IAIf,UAGI,sBAAKmC,UAAU,YAAf,UACI,8BACK5B,EAAWC,KAAI,SAAA4B,GAAC,OAAI,cAAC,EAAD,CAAuBlD,SAAUkD,GAAlBA,EAAEhD,WAE1C,8BACKgC,EAAOZ,KAAI,SAAA4B,GAAC,OAAI,cAAC3C,EAAD,CAAqBC,MAAO0C,GAAhBA,EAAEzC,eAGvC,qBAAKwC,UAAU,cAAf,SACI,wBAAQA,UAAU,MAAlB,kGC1DD,SAASE,EAAOpD,GAAQ,IAC5BiD,EAAwCjD,EAAxCiD,UAAWjB,EAA6BhC,EAA7BgC,aAAcqB,EAAerD,EAAfqD,YAChC,OACI,qBAAKjB,GAAG,SAAR,SAEQa,EAAU1B,KAAI,SAAAP,GAAQ,OAClB,cAACsC,EAAD,CACYtC,SAAUA,EACViC,UAAWA,EACXjB,aAAcA,EACdqB,YAAaA,GAJRrC,EAASA,eAiB9C,SAASsC,EAAWtD,GAAQ,IAEjBgB,EAAkDhB,EAAlDgB,SAAUiC,EAAwCjD,EAAxCiD,UAAWjB,EAA6BhC,EAA7BgC,aAAcqB,EAAerD,EAAfqD,YAgB1C,OACI,8BACI,uBAAO3C,MAAOM,EAASA,SAChBuC,MAAO,CAACC,MAAM,GAAD,OAAKH,EAAL,OACbH,UAAU,eACVO,UAAQ,IACf,mBAAGP,UAAU,iBACVQ,MAAM,QACNC,QAlBX,SAAsBZ,GACFA,EAAEa,OAAOC,cAAcrB,cAAc,SAC7CsB,SACRvB,SAASwB,YAAY,QACrB/B,EAAaiB,EAAU1B,KAAI,SAAAyC,GAEvB,OADAA,EAAElC,OAAUkC,EAAEhD,WAAaA,EAASA,SAC7BgD,OAUP,SAGKhD,EAASc,OAAS,QAAU,oBC3B9BmC,MAnBf,WAAgB,IAAD,EAEuB/B,mBAAST,KAFhC,mBAEJwB,EAFI,KAEOjB,EAFP,OAG2BE,qBAH3B,mBAGJmB,EAHI,KAGSpB,EAHT,KAKX,OACI,sBAAKiB,UAAU,MAAf,UACI,mIACA,oCACI,cAACnB,EAAD,CAAMC,aAAcA,EACdC,eAAgBA,IACtB,cAACmB,EAAD,CAAQH,UAAWA,EACXjB,aAAcA,EACdqB,YAAaA,WCrBrCa,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJ7B,SAAS8B,eAAe,U","file":"static/js/main.37cca0b4.chunk.js","sourcesContent":["import React from 'react'\n\n/**\n * компонент инпут/чекбокс\n * выбор типов символов для пароля\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nfunction Checkbox(props) {\n    const {checkbox} = props;\n    return (\n        <p>\n            <label>\n                <input type=\"checkbox\"\n                       name={checkbox.name}\n                       defaultChecked={checkbox.checked}\n                       disabled={checkbox.disabled ?? false}/>\n                <span>{checkbox.info}</span>\n            </label>\n        </p>\n    )\n}\n\nexport default Checkbox","import React from 'react'\n\nexport default function Radio(props) {\n    const {radio} = props;\n    return (\n        <p>\n            <label>\n                <input name=\"pass_length\" type=\"radio\"\n                       value={radio.value}\n                       defaultChecked={radio.checked} />\n                <span>{radio.info}</span>\n            </label>\n        </p>\n    )\n}","export const passwords_count = 8;\n\nexport const init_radios = [\n    {\n        value: 10,\n        info: '10 знаков',\n        checked: false\n    },\n    {\n        value: 15,\n        info: '15 знаков',\n        checked: false\n    },\n    {\n        value: 20,\n        info: '20 знаков',\n        checked: true\n    },\n    {\n        value: 30,\n        info: '30 знаков',\n        checked: false\n    },\n];\n\nexport const init_checkboxes = [\n    {\n        name: 'en',\n        info: 'строчные (abc)',\n        checked: true,\n        string: 'abcdefghijklmnopqrstuvwxyz'\n    },\n    {\n        name: 'EN',\n        info: 'Заглавные (ABC)',\n        checked: true,\n        string: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n    },\n    {\n        name: 'num',\n        info: 'цифры (123)',\n        checked: true,\n        string: '012345678901234567890123456789'\n    },\n    {\n        name: 'symb',\n        info: 'символы (!@#)',\n        checked: true,\n        string: '!@#$%^&*(){}[]_-+=?:~'\n    }\n];\n\n\n","import {init_checkboxes, passwords_count, init_radios} from \"./app-config\";\n\n/**\n * генерация рандомного пароля\n * @param string исходная строка возможных символов\n * @param length длина пароля\n * @returns {string}\n */\nexport function generatePassword(string, length) {\n    let password = '';\n    for (let i = 0; i < length; i++) {\n        const position = Math.floor(Math.random() * string.length);\n        password += string[position]\n    }\n    return password\n}\n\n/**\n * генерация исходной строки исходя из выбранных чекбоксов\n * @param checkboxes\n * @returns {*}\n */\nexport function generateString(checkboxes = init_checkboxes) {\n    return checkboxes.map(\n        checkbox => checkbox.checked ? checkbox.string : ''\n    ).join('');\n}\n\n/**\n * Генерирует список паролей c флагом - скопирован ли\n * @param string\n * @param length\n * @returns {{password: string, copied: boolean}[]}\n */\nexport function generatePasswords(\n    string = generateString(),\n    length = init_radios.find(r => r.checked === true).value\n) {\n    return Array(passwords_count).fill(null).map(\n        () => {\n            return {\n                password: generatePassword(string, length),\n                copied: false\n            }\n        }\n    );\n}","import React, {useState} from 'react'\nimport Checkbox from \"./Checkbox\"\nimport Radio from \"./Radio\"\nimport {init_checkboxes, init_radios} from \"../lib/app-config\"\nimport {generatePasswords, generateString} from \"../lib/functions\"\n\n/**\n * компонент формы с обработчиками изменения формы и нажатия кнопки\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nexport default function Form(props) {\n    const {setPasswords, setInputLength} = props\n    const [radios] = useState(init_radios)\n    const [checkboxes] = useState(init_checkboxes)\n\n    /**\n     * Обработка изменения полей формы\n     */\n    function handleFormChange() {\n        const form = document.querySelector('#form')\n        checkboxes.forEach(checkbox => {\n            checkbox.checked = form[checkbox.name].checked\n        })\n        const count = checkboxes.filter(checkbox => checkbox.checked === true).length\n        if (count === 1) {\n            const checkbox = checkboxes.find(ch => ch.checked === true)\n            form[checkbox.name].disabled = true\n        } else {\n            form.querySelector('[disabled]')?.removeAttribute('disabled')\n        }\n\n        radios.forEach(radio => {\n            radio.checked = form.querySelector(`[value=\"${radio.value}\"]`).checked\n        })\n\n        form.querySelector('button').click()\n    }\n\n    /**\n     * обработка нажатия кнопки\n     * @param e\n     */\n    function handleFormSubmit(e) {\n        e.preventDefault();\n        const string = generateString(checkboxes)\n        const length = radios.find(radio => radio.checked).value\n        const passwords = generatePasswords(string, length)\n        setPasswords(passwords)\n        setInputLength(length)\n    }\n\n    return (\n        <form id=\"form\"\n              onChange={handleFormChange}\n              onSubmit={handleFormSubmit}>\n            <div className=\"form-body\">\n                <div>\n                    {checkboxes.map(o => <Checkbox key={o.name} checkbox={o}/>)}\n                </div>\n                <div>\n                    {radios.map(o => <Radio key={o.value} radio={o}/>)}\n                </div>\n            </div>\n            <div className=\"form-footer\">\n                <button className=\"btn\">Сгенерировать!</button>\n            </div>\n        </form>\n    );\n}\n\n\n\n","import React from 'react'\n\n/**\n * компонент - блок со сгенерированными паролями\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nexport default function Result(props) {\n    const {passwords, setPasswords, inputLength} = props;\n    return (\n        <div id=\"result\">\n            {\n                passwords.map(password =>\n                    <ResultItem key={password.password}\n                                password={password}\n                                passwords={passwords}\n                                setPasswords={setPasswords}\n                                inputLength={inputLength}/>\n                )\n            }\n        </div>\n    )\n}\n\n/**\n * компонент - один сгенерированный пароль\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nfunction ResultItem(props) {\n\n    const {password, passwords, setPasswords, inputLength} = props;\n\n    /**\n     * обработка нажатия иконки скопировать у пароля\n     * @param e\n     */\n    function copyPassword(e) {\n        const inputEl = e.target.parentElement.querySelector('input')\n        inputEl.select()\n        document.execCommand('copy')\n        setPasswords(passwords.map(p => {\n            p.copied = (p.password === password.password)\n            return p\n        }))\n    }\n\n    return (\n        <p>\n            <input value={password.password}\n                   style={{width: `${inputLength}ch`}}\n                   className=\"result__item\"\n                   readOnly/>\n            <i className=\"material-icons\"\n               title=\"copy!\"\n               onClick={copyPassword}>\n                {password.copied ? \"check\" : \"content_copy\"}\n            </i>\n        </p>\n    )\n}\n\n","import '../style.css';\nimport Form from \"./Form\";\nimport Result from \"./Result\";\nimport React, {useState} from \"react\";\nimport {generatePasswords} from \"../lib/functions\";\n\n\n/**\n * Корневой компонент приложения\n * @returns {JSX.Element}\n * @constructor\n */\nfunction App() {\n\n    const [passwords, setPasswords] = useState(generatePasswords());\n    const [inputLength, setInputLength] = useState();\n\n    return (\n        <div className=\"App\">\n            <h1>Генератор Паролей</h1>\n            <section>\n                <Form setPasswords={setPasswords}\n                      setInputLength={setInputLength}/>\n                <Result passwords={passwords}\n                        setPasswords={setPasswords}\n                        inputLength={inputLength}/>\n            </section>\n        </div>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}